{"version":3,"sources":["features/userSlice.js","HeaderOption.js","Firebase.js","Header.js","Sidebar.js","InputOptions.js","Post.js","Feed.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","avatar","Icon","title","onClick","useSelector","className","Avatar","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Header","dispatch","useDispatch","src","alt","type","placeholder","HomeIcon","SupervisorAccount","BusinessCenter","Chat","Notifications","signOut","Sidebar","recentItem","topic","photoUrl","displayName","InputOptions","color","style","Post","forwardRef","ref","description","message","photourl","ThumbUpAltOutlinedIcon","ChatOutLinedIcon","ShareOutLinedIcon","SendOutlinedIcon","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","preventDefault","add","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionIcon","EventNoteIcon","CalenderViewDayIcon","Login","setName","setEmail","password","setPassword","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","profileUrl","catch","error","alert","createUserWithEmailAndPassword","updateProfile","photoURL","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73d0a70a.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.user.value)`\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./HeaderOption.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport { selectUser } from \"./features/userSlice\";\n\nconst HeaderOption = ({ avatar, Icon, title, onClick }) => {\n  const user = useSelector(selectUser);\n\n  return (\n    <div onClick={onClick} className=\"headerOption\">\n      {avatar && (\n        <Avatar className=\"headerOption__icon\">{user?.email[0]}</Avatar>\n      )}\n      {Icon && <Icon className=\"headerOption__icon\" />}\n      <h3 className=\"headerOption__title\">{title}</h3>\n    </div>\n  );\n};\n\nexport default HeaderOption;\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDY4lOpS8AFavutw14a3YGoafjlPS-YOws\",\n  authDomain: \"linkedin-clone-c04e0.firebaseapp.com\",\n  projectId: \"linkedin-clone-c04e0\",\n  storageBucket: \"linkedin-clone-c04e0.appspot.com\",\n  messagingSenderId: \"528217413449\",\n  appId: \"1:528217413449:web:de1bee487eaf6aeac46c98\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./Header.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HeaderOption from \"./HeaderOption\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SupervisorAccount from \"@material-ui/icons/SupervisorAccount\";\nimport BusinessCenter from \"@material-ui/icons/BusinessCenter\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Chat from \"@material-ui/icons/Chat\";\nimport { logout, selectUser } from \"./features/userSlice\";\nimport { auth } from \"./Firebase\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const logoutOfApp = () => {\n    dispatch(logout());\n    auth.signOut();\n  };\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <img\n          src=\"https://www.flaticon.com/svg/vstatic/svg/174/174857.svg?token=exp=1611745615~hmac=91513d1191243f7fb79d795072085373\"\n          alt=\"\"\n        />\n        <div className=\"header__search\">\n          <SearchIcon />\n          <input type=\"text\" placeholder=\"Search\" />\n        </div>\n      </div>\n      <div className=\"header__right\">\n        <HeaderOption Icon={HomeIcon} title=\"Home\" />\n        <HeaderOption Icon={SupervisorAccount} title=\"My Network\" />\n        <HeaderOption Icon={BusinessCenter} title=\"Jobs\" />\n        <HeaderOption Icon={Chat} title=\"Messaging\" />\n        <HeaderOption Icon={Notifications} title=\"Notifications\" />\n        <HeaderOption avatar={true} title=\"Akram\" onClick={logoutOfApp} />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"./Sidebar.css\";\nimport { selectUser } from \"./features/userSlice\";\n\nconst Sidebar = () => {\n  const user = useSelector(selectUser);\n  const recentItem = (topic) => (\n    <div className=\"sidebar__recentItem\">\n      <span className=\"sidebar__hash\">#</span>\n      <p>{topic}</p>\n    </div>\n  );\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__top\">\n        <img src=\"https://source.unsplash.com/random\" alt=\"\" />\n        <Avatar src={user.photoUrl} className=\"sidebar__avatar\">\n          {user.email[0]}\n        </Avatar>\n        <h2>{user.displayName}</h2>\n        <h4>{user.email}</h4>\n      </div>\n      <div className=\"sidebar__stats\">\n        <div className=\"sidebar__stat\">\n          <p>who viewed you</p>\n          <p className=\"sidebar__statNumber\">1234</p>\n        </div>\n        <div className=\"sidebar__stat\">\n          <p>views on post</p>\n          <p className=\"sidebar__statNumber\">3333</p>\n        </div>\n      </div>\n      <div className=\"sidebar__bottom\">\n        <p>Recent</p>\n        {recentItem(\"reactjs\")}\n        {recentItem(\"programming\")}\n        {recentItem(\"software engineering\")}\n        {recentItem(\"design\")}\n        {recentItem(\"developer\")}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./InputOptions.css\";\n\nconst InputOptions = ({ Icon, title, color }) => {\n  return (\n    <div className=\"inputOptions\">\n      <Icon style={{ color: color }} />\n      <h4>{title}</h4>\n    </div>\n  );\n};\n\nexport default InputOptions;\n","import React, { forwardRef } from \"react\";\nimport \"./Post.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport InputOptions from \"./InputOptions\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport ChatOutLinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutLinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\n\nconst Post = forwardRef(({ name, description, message, photourl }, ref) => {\n  return (\n    <div ref={ref} className=\"post\">\n      <div className=\"post__header\">\n        <Avatar src={photourl}>{name[0]}</Avatar>\n        <div className=\"post__info\">\n          <h2>{name}</h2>\n          <p>{description}</p>\n        </div>\n      </div>\n      <div className=\"post__body\">\n        <p>{message}</p>\n      </div>\n      <div className=\"post__buttons\">\n        <InputOptions Icon={ThumbUpAltOutlinedIcon} title=\"Like\" color=\"gray\" />\n        <InputOptions Icon={ChatOutLinedIcon} title=\"Comment\" color=\"gray\" />\n        <InputOptions Icon={ShareOutLinedIcon} title=\"Share\" color=\"gray\" />\n        <InputOptions Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\n      </div>\n    </div>\n  );\n});\n\nexport default Post;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport FlipMove from \"react-flip-move\";\nimport firebase from \"firebase\";\nimport \"./Feed.css\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport InputOptions from \"./InputOptions\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport SubscriptionIcon from \"@material-ui/icons/Subscriptions\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport CalenderViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\nimport Post from \"./Post\";\nimport { db, auth } from \"./Firebase\";\nimport { selectUser } from \"./features/userSlice\";\n\nconst Feed = () => {\n  const [input, setInput] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const user = useSelector(selectUser);\n  useEffect(() => {\n    db.collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            data: doc.data(),\n          }))\n        )\n      );\n  }, []);\n\n  const sendPost = (e) => {\n    e.preventDefault();\n    db.collection(\"posts\").add({\n      name: user.displayName,\n      description: user.email,\n      message: input,\n      photoUrl: user.photoUrl || \"\",\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"feed\">\n      <div className=\"feed__inputContainer\">\n        <div className=\"feed__input\">\n          <CreateIcon />\n          <form>\n            <input\n              value={input}\n              type=\"text\"\n              onChange={(e) => setInput(e.target.value)}\n            />\n            <button onClick={sendPost} type=\"submit\">\n              Send\n            </button>\n          </form>\n        </div>\n        <div className=\"feed__inputOptions\">\n          <InputOptions Icon={ImageIcon} title=\"Photo\" color=\"#708579\" />\n          <InputOptions Icon={SubscriptionIcon} title=\"Video\" color=\"#E7A33E\" />\n          <InputOptions Icon={EventNoteIcon} title=\"Event\" color=\"#C0CBCD\" />\n          <InputOptions\n            Icon={CalenderViewDayIcon}\n            title=\"write article\"\n            color=\"#7FC15E\"\n          />\n        </div>\n      </div>\n      <FlipMove>\n        {posts.map(({ id, data: { name, description, message, photoUrl } }) => (\n          <Post\n            key={id}\n            name={name}\n            description={description}\n            message={message}\n            photourl={photoUrl}\n          />\n        ))}\n      </FlipMove>\n    </div>\n  );\n};\n\nexport default Feed;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport \"./Login.css\";\nimport { auth } from \"./Firebase\";\nimport { login } from \"./features/userSlice\";\n\nconst Login = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [profilePic, setProfilePic] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const register = () => {\n    if (!name) return alert(\"Please enter a full Name\");\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((userAuth) => {\n        userAuth.user\n          .updateProfile({\n            displayName: name,\n            photoURL: profilePic,\n          })\n          .then(() => {\n            dispatch(\n              login({\n                email: userAuth.user.email,\n                uid: userAuth.user.uid,\n                displayName: name,\n                photoURL: profilePic,\n              })\n            );\n          });\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  const loginToApp = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((userAuth) => {\n        dispatch(\n          login({\n            email: userAuth.user.email,\n            uid: userAuth.user.uid,\n            displayName: userAuth.user.displayName,\n            profileUrl: userAuth.user.profileUrl,\n          })\n        );\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  return (\n    <div className=\"login\">\n      <img\n        src=\"https://i1.faceprep.in/fp/articles/img/24157_1580301600.jpg\"\n        alt=\"\"\n      />\n      <form>\n        <input\n          value={name}\n          placeholder=\"Full name (required if registering)\"\n          type=\"text\"\n          onChange={(e) => setName(e.target.value)}\n        />\n        <input\n          value={profilePic}\n          placeholder=\"Profile pic URL (optional) \"\n          type=\"text\"\n          onChange={(e) => setProfilePic(e.target.value)}\n        />\n        <input\n          value={email}\n          placeholder=\"Email\"\n          type=\"email\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          value={password}\n          placeholder=\"Password\"\n          type=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\" onClick={loginToApp}>\n          Sign In\n        </button>\n      </form>\n      <p>\n        Not a member?{\" \"}\n        <span className=\"login__register\" onClick={register}>\n          Register Now\n        </span>\n      </p>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport \"./Widgets.css\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\n\nconst Widgets = () => {\n  const newsArticle = (heading, subtitle) => (\n    <div className=\"widgets__article\">\n      <div className=\"widgets__articleLeft\">\n        <FiberManualRecordIcon />\n      </div>\n      <div className=\"widgets__articleRight\">\n        <h4>{heading}</h4>\n        <p>{subtitle}</p>\n      </div>\n    </div>\n  );\n  return (\n    <div className=\"widgets\">\n      <div className=\"widgets__header\">\n        <h2>LinkedIn News</h2>\n        <InfoIcon />\n      </div>\n      {newsArticle(\"Liverpool wins UCL\", \"Top news -8888 readers\")}\n      {newsArticle(\"CoronaVirus India update\", \"corona -3000 readers\")}\n      {newsArticle(\"BTC ATH\", \"crypto -1111 readers\")}\n      {newsArticle(\n        \"Biden to sworn as US president\",\n        \"US politics -5555 readers\"\n      )}\n    </div>\n  );\n};\n\nexport default Widgets;\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Feed from \"./Feed\";\r\nimport { selectUser, login, logout } from \"./features/userSlice\";\r\nimport Login from \"./Login\";\r\nimport { auth } from \"./Firebase\";\r\nimport Widgets from \"./Widgets\";\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((userAuth) => {\r\n      if (userAuth) {\r\n        dispatch(\r\n          login({\r\n            email: userAuth.email,\r\n            uid: userAuth.uid,\r\n            displayName: userAuth.displayName,\r\n            photoUrl: userAuth.photoURL,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <div className=\"app__body\">\r\n          <Sidebar />\r\n          <Feed />\r\n          <Widgets />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"../features/userSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}